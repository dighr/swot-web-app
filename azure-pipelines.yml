# Get code from repo, build images, push images to container registry

trigger: none
pr: none

# resources:
#     - repo: self

# variables:
#     # Container registry service connection established during pipeline creation
#     dockerRegistryServiceConnection: "27782c56-68dc-4114-8867-9d2b63d635af"
#     imageRepository: "asdf"
#     containerRegistry: "$(registryname).azurecr.io"
#     dockerfilePath: "$(Build.SourcesDirectory)/docker/frontend/Dockerfile"
#     tag: "$(Build.BuildId)"

#     # Agent VM image name
#     vmImageName: "ubuntu-latest"

stages:
    - stage: Build
      displayName: Build and push stage
      jobs:
          - job: Build
            displayName: Build
            pool:
                vmImage: $(vmImageName)
            steps:
                - task: DownloadSecureFile@1
                  name: nginxEnv
                  displayName: Download Frontend Settings
                  inputs:
                      secureFile: "$(env)-frontend.env"

                - task: DownloadSecureFile@1
                  name: backendEnv
                  displayName: Download Backend Settings
                  inputs:
                      secureFile: "$(env)-backend.env"

                - script: |
                      cp $(Build.SourcesDirectory)/docker-compose.yml $(Build.ArtifactStagingDirectory)
                      cp -f $(nginxEnv.secureFilePath) $(Build.SourcesDirectory)/client/.env
                      cp -f $(backendEnv.secureFilePath) $(Build.SourcesDirectory)/.env
                  displayName: Copy Settings

                - task: DockerCompose@0
                  displayName: Build Images
                  inputs:
                      containerregistrytype: "Azure Container Registry"
                      azureSubscription: "Free Trial($(subscriptionid))"
                      azureContainerRegistry: '{"loginServer":"$(registryname).azurecr.io", "id" : "/subscriptions/$(subscriptionid)/resourceGroups/$(rgname)/providers/Microsoft.ContainerRegistry/registries/$(registryname)"}'
                      dockerComposeFile: "**/docker-compose.yml"
                      action: "Build services"

                - task: DockerCompose@0
                  displayName: Push Images
                  inputs:
                      containerregistrytype: "Azure Container Registry"
                      azureSubscription: "Free Trial($(subscriptionid))"
                      azureContainerRegistry: '{"loginServer":"$(registryname).azurecr.io", "id" : "/subscriptions/$(subscriptionid)/resourceGroups/$(rgname)/providers/Microsoft.ContainerRegistry/registries/$(registryname)"}'
                      dockerComposeFile: "**/docker-compose.yml"
                      action: "Push services"

                - task: PublishPipelineArtifact@1
                  displayName: Publish Artifacts
                  inputs:
                      targetPath: "$(Build.ArtifactStagingDirectory)"
                      publishLocation: "pipeline"
                      artifact: $(Build.BuildId)
